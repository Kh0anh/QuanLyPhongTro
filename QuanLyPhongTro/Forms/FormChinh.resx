<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgDanhSachBieuTuong.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgDanhSachBieuTuong.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABi
        BgAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECoAA0MBiAMCAf4DAgH+A0MBiDAAAx8B6ANAAboDRAGMAzgBXwMiATEDBgEH
        mAADCQEMAz0BbQMUARsEAAM0AdADAAH/AwAB/wM0AdAEAAMUARsDPQFtAwkBDBQAA0UBmAMkATQHAAH/
        AwAB/wMAAf8DAAH/AwAB/wMGAfsDQwGlkAADCQEMAzwBwwMAAf8DHgHpA0QBpgMGAfsDAAH/AwAB/wMG
        AfsDRAGmAx4B6QMAAf8DPAHDAwkBDBAAAzwBwgMrAUIHAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DPAHC
        kAADPQFtAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/Az0BbRAA
        AzwBwgMrAUIHAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DPAHCkAADFAEbAx4B6QMAAf8DAAH/AwAB/wMR
        AfQDQQG3A0EBtwMRAfQDAAH/AwAB/wMAAf8DHgHpAxQBGxAAAzwBwgMrAUIHAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DPAHClAADRAGmAwAB/wMAAf8DPAHCAxEBFggAAxEBFgM9AcEDAAH/AwAB/wNEAaYUAAM8
        AcIDKwFCBwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AzwBwowAA0MBiAM0AdADBgH7AwAB/wMRAfQDEQEW
        EAADEQEWAxEB9AMAAf8DBgH7AzQB0ANDAYgMAAM8AcIDKwFCBwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AzwBwowAAwIB/gMAAf8DAAH/AwAB/wNBAbcYAANBAbcDAAH/AwAB/wMAAf8DAgH+DAADPAHCAysBQgQA
        AxMB8gNCAbIDAAH/AwAB/wMAAf8DAAH/AzwBwowAAwIB/gMAAf8DAAH/AwAB/wNBAbcYAANBAbcDAAH/
        AwAB/wMAAf8DAgH+DAADPAHCAysBQgQAAxMB8wNBAbYDAAH/AwAB/wMAAf8DAAH/AzwBwowAA0MBiAM0
        AdADBgH7AwAB/wMRAfQDEQEWEAADEQEWAxEB9AMAAf8DBgH7AzQB0ANDAYgMAAM8AcIDKwFCBwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AzwBwpQAA0QBpgMAAf8DAAH/Az0BwQMRARYIAAMRARYDPQHBAwAB/wMA
        Af8DRAGmFAADPAHCAysBQgcAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM8AcKQAAMUARsDHgHpAwAB/wMA
        Af8DAAH/AxEB9ANBAbcDQQG3AxEB9AMAAf8DAAH/AwAB/wMeAekDFAEbEAADPAHCAysBQgcAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wM8AcKQAAM9AW0DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DPQFtEAADPAHCAysBQgcAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM8AcKQAAMJ
        AQwDPAHDAwAB/wMeAekDRAGmAwYB+wMAAf8DAAH/AwYB+wNEAaYDHgHpAwAB/wM8AcMDCQEMEAADPAHC
        AysBQgcAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM8AcKUAAMJAQwDPQFtAxQBGwQAAzQB0AMAAf8DAAH/
        AzQB0AQAAxQBGwM9AW0DCQEMFAADPAHCAzcBywNAAbkDAAH/AwAB/wMAAf8DAAH/AwAB/wMIAfoDQwGl
        pAADQwGIAwIB/gMCAf4DQwGIJAADJgE5AzABSwMwAUsDHwHoA0ABugNEAYwDOAFeAyEBMAMGAQeQAAFC
        AU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAB/AE/AfwBDwQAAcQBIwHkAQcEAAGA
        AQEB5AEHBAABgAEBAeQBBwQAAYABAQHkAQcEAAHBAYMB5AEHBAABAwHAAeQBBwQAAQcB4AHkAQcEAAEH
        AeAB5AEHBAABAwHAAeQBBwQAAcEBgwHkAQcEAAGAAQEB5AEHBAABgAEBAeQBBwQAAYABAQHkAQcEAAHE
        ASMB4AEHBAAB/AE/AeABDwQACw==
</value>
  </data>
</root>